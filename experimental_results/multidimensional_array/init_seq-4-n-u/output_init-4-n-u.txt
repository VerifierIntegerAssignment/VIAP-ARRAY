>>> file_name='experiment/array/init-3-n-u/init-3-n-u.c'
>>> prove_auto(file_name)
Program Body
{
  int RET = 0;
  int _1_PROVE[][][];
  int i;
  int j;
  int k;
  int m;
  int n;
  int p;
  int A[][][];
  int C;
  i = 0;
  j = 0;
  k = 0;
  while (i < m)
  {
    j = 0;
    k = 0;
    while (j < n)
    {
      k = 0;
      while (k < p)
      {
        A[i][j][k] = C;
        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

  i = 0;
  j = 0;
  k = 0;
  while (i < m)
  {
    j = 0;
    k = 0;
    while (j < n)
    {
      k = 0;
      while (k < p)
      {
        _1_PROVE[j][k][i] = A[i][j][k] == C;
        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:array C:int j:int i:int k:int _1_PROVE:array m:int RET:int n:int p:int}
Program Body
{
  int RET = 0;
  int _1_FAILED = 0;
  if (cond <= 0)
  {
    ERROR:


    _1_FAILED = 1;
  }

}

Function Name:
__VERIFIER_assert
Return Type:
void
Input Variables:
{ cond:int}
Local Variables:
{ _1_FAILED:int RET:int}
Output for main:
Output in prefix notation:
1. Frame axioms:
(= A1 A)
(= p1 p)
(= C1 C)
(= m1 m)
(= n1 n)

2. Output equations:
(= i1 (+ _N6 0))
(= k1 (k18 _N6))
(= j1 (j18 _N6))
(= (d3array1 _x1 _x2 _x3 _x4) (d3array18 _x1 _x2 _x3 _x4 _N6))
(= main 0)

3. Other axioms:
(= (d3array2 _x1 _x2 _x3 _x4 (+ _n1 1) _n2 _n3) (ite (and (= _x1 A) (= _x2 (+ _n
3 0)) (= _x3 (+ _n2 0)) (= _x4 (+ _n1 0))) C (d3array2 _x1 _x2 _x3 _x4 _n1 _n2 _
n3)))
(= (d3array2 _x1 _x2 _x3 _x4 0 _n2 _n3) (d3array5 _x1 _x2 _x3 _x4 _n2 _n3))
(>= (_N1 _n2 _n3) (+ (- 0) p))
(implies (< _n1 (_N1 _n2 _n3)) (< (+ _n1 0) p))
(= (k5 (+ _n2 1) _n3) (+ (_N1 _n2 _n3) 0))
(= (d3array5 _x1 _x2 _x3 _x4 (+ _n2 1) _n3) (d3array2 _x1 _x2 _x3 _x4 (_N1 _n2 _
n3) _n2 _n3))
(= (k5 0 _n3) 0)
(= (d3array5 _x1 _x2 _x3 _x4 0 _n3) (d3array9 _x1 _x2 _x3 _x4 _n3))
(>= (_N2 _n3) (+ (- 0) n))
(implies (< _n2 (_N2 _n3)) (< (+ _n2 0) n))
(= (k9 (+ _n3 1)) (k5 (_N2 _n3) _n3))
(= (j9 (+ _n3 1)) (+ (_N2 _n3) 0))
(= (d3array9 _x1 _x2 _x3 _x4 (+ _n3 1)) (d3array5 _x1 _x2 _x3 _x4 (_N2 _n3) _n3)
)
(= (k9 0) 0)
(= (j9 0) 0)
(= (d3array9 _x1 _x2 _x3 _x4 0) (d3array _x1 _x2 _x3 _x4))
(>= _N3 (+ (- 0) m))
(implies (< _n3 _N3) (< (+ _n3 0) m))
(= (d3array11 _x1 _x2 _x3 _x4 (+ _n4 1) _n5 _n6) (d3array11 _x1 _x2 _x3 _x4 _n4
_n5 _n6))
(= (d3array11 _x1 _x2 _x3 _x4 0 _n5 _n6) (d3array14 _x1 _x2 _x3 _x4 _n5 _n6))
(>= (_N4 _n5 _n6) (+ (- 0) p))
(implies (< _n4 (_N4 _n5 _n6)) (< (+ _n4 0) p))
(= (k14 (+ _n5 1) _n6) (+ (_N4 _n5 _n6) 0))
(= (d3array14 _x1 _x2 _x3 _x4 (+ _n5 1) _n6) (d3array11 _x1 _x2 _x3 _x4 (_N4 _n5
 _n6) _n5 _n6))
(= (k14 0 _n6) 0)
(= (d3array14 _x1 _x2 _x3 _x4 0 _n6) (d3array18 _x1 _x2 _x3 _x4 _n6))
(>= (_N5 _n6) (+ (- 0) n))
(implies (< _n5 (_N5 _n6)) (< (+ _n5 0) n))
(= (k18 (+ _n6 1)) (k14 (_N5 _n6) _n6))
(= (j18 (+ _n6 1)) (+ (_N5 _n6) 0))
(= (d3array18 _x1 _x2 _x3 _x4 (+ _n6 1)) (d3array14 _x1 _x2 _x3 _x4 (_N5 _n6) _n
6))
(= (k18 0) 0)
(= (j18 0) 0)
(= (d3array18 _x1 _x2 _x3 _x4 0) (d3array9 _x1 _x2 _x3 _x4 _N3))
(>= _N6 (+ (- 0) m))
(implies (< _n6 _N6) (< (+ _n6 0) m))

Output in normal notation:
1. Frame axioms:
A1 = A
p1 = p
C1 = C
m1 = m
n1 = n

2. Output equations:
i1 = (_N6+0)
k1 = k18(_N6)
j1 = j18(_N6)
d3array1(_x1,_x2,_x3,_x4) = d3array18(_x1,_x2,_x3,_x4,_N6)
main = 0

3. Other axioms:
d3array2(_x1,_x2,_x3,_x4,(_n1+1),_n2,_n3) = ite(((_x1=A) and (_x2=(_n3+0)) and (
_x3=(_n2+0)) and (_x4=(_n1+0))),C,d3array2(_x1,_x2,_x3,_x4,_n1,_n2,_n3))
d3array2(_x1,_x2,_x3,_x4,0,_n2,_n3) = d3array5(_x1,_x2,_x3,_x4,_n2,_n3)
(_N1(_n2,_n3)>=(-(0)+p))
(_n1<_N1(_n2,_n3)) -> ((_n1+0)<p)
k5((_n2+1),_n3) = (_N1(_n2,_n3)+0)
d3array5(_x1,_x2,_x3,_x4,(_n2+1),_n3) = d3array2(_x1,_x2,_x3,_x4,_N1(_n2,_n3),_n
2,_n3)
k5(0,_n3) = 0
d3array5(_x1,_x2,_x3,_x4,0,_n3) = d3array9(_x1,_x2,_x3,_x4,_n3)
(_N2(_n3)>=(-(0)+n))
(_n2<_N2(_n3)) -> ((_n2+0)<n)
k9((_n3+1)) = k5(_N2(_n3),_n3)
j9((_n3+1)) = (_N2(_n3)+0)
d3array9(_x1,_x2,_x3,_x4,(_n3+1)) = d3array5(_x1,_x2,_x3,_x4,_N2(_n3),_n3)
k9(0) = 0
j9(0) = 0
d3array9(_x1,_x2,_x3,_x4,0) = d3array(_x1,_x2,_x3,_x4)
(_N3>=(-(0)+m))
(_n3<_N3) -> ((_n3+0)<m)
d3array11(_x1,_x2,_x3,_x4,(_n4+1),_n5,_n6) = d3array11(_x1,_x2,_x3,_x4,_n4,_n5,_
n6)
d3array11(_x1,_x2,_x3,_x4,0,_n5,_n6) = d3array14(_x1,_x2,_x3,_x4,_n5,_n6)
(_N4(_n5,_n6)>=(-(0)+p))
(_n4<_N4(_n5,_n6)) -> ((_n4+0)<p)
k14((_n5+1),_n6) = (_N4(_n5,_n6)+0)
d3array14(_x1,_x2,_x3,_x4,(_n5+1),_n6) = d3array11(_x1,_x2,_x3,_x4,_N4(_n5,_n6),
_n5,_n6)
k14(0,_n6) = 0
d3array14(_x1,_x2,_x3,_x4,0,_n6) = d3array18(_x1,_x2,_x3,_x4,_n6)
(_N5(_n6)>=(-(0)+n))
(_n5<_N5(_n6)) -> ((_n5+0)<n)
k18((_n6+1)) = k14(_N5(_n6),_n6)
j18((_n6+1)) = (_N5(_n6)+0)
d3array18(_x1,_x2,_x3,_x4,(_n6+1)) = d3array14(_x1,_x2,_x3,_x4,_N5(_n6),_n6)
k18(0) = 0
j18(0) = 0
d3array18(_x1,_x2,_x3,_x4,0) = d3array9(_x1,_x2,_x3,_x4,_N3)
(_N6>=(-(0)+m))
(_n6<_N6) -> ((_n6+0)<m)

4. Assumption :

5. Assertion :
(d3array11(A,(_n6+0),(_n5+0),(_n4+0),_N4(_n5, _n6),_n5,_n6)==C)
Output for __VERIFIER_assert:
Output in prefix notation:
1. Frame axioms:
(= (cond1 cond) cond)

2. Output equations:
(= (_1_FAILED1 cond) (ite (<= cond 0) 1 0))
(= (__VERIFIER_assert cond) 0)

3. Other axioms:

Output in normal notation:
1. Frame axioms:
cond1(cond) = cond

2. Output equations:
_1_FAILED1(cond) = ite((cond<=0),1,0)
__VERIFIER_assert(cond) = 0

3. Other axioms:

4. Assumption :

5. Assertion :

----Proving Process----


Function Name--main
XXXXX-XXXXX
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),d3array9(A, _x2, _x3
, _x4, 0) == d3array(A, _x2, _x3, _x4)))
Successfully Proved

ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),d3array5(A, _x2, _x3
, _x4, 0, _k3) == d3array(A, _x2, _x3, _x4)))
Successfully Proved
d3array2(A, _k3, _k2, 0, 1, _k2, _k3) == C
Successfully Proved
Implies((d3array2(A, _k3, _k2, _k1, _k1 + 1, _k2, _k3)==C),(d3array2(A, _k3, _k2
, _k1 + 1, _k1 + 2, _k2, _k3)==C))
Successfully Proved
Implies(ForAll([_n1,_k3,_k2],Implies(And(And(And(_n1>=0,And(_k3>=0,_k2>=0)),_n1<
_L1),_L1>0),d3array2(A, _k3, _k2, _n1, _n1 + 1, _k2, _k3) == C)),ForAll([_n1,_k3
,_k2],Implies(And(And(And(And(And(_n1>=0,And(_k3>=0,_k2>=0)),_n1<_L1),_L1>0),_n1
<_L1+1),_L1>0),d3array2(A, _k3, _k2, _n1, _n1 + 1, _k2, _k3) == C)))
Successfully Proved
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),Implies((d3array5(A,
 _x2, _x3, _x4, _k2, _k3)==d3array(A, _x2, _x3, _x4)),(d3array5(A, _x2, _x3, _x4
, _k2 + 1, _k3)==d3array(A, _x2, _x3, _x4)))))
Failed to Prove
ForAll([_n1],Implies(_n1>=0,d3array5(A, _k3, 0, _n1, 1, _k3) == C))
Successfully Proved
ForAll([_n1],Implies(_n1>=0,Implies((d3array5(A, _k3, _k2 - 1, _n1, _k2, _k3)==C
),(d3array5(A, _k3, _k2, _n1, _k2 + 1, _k3)==C))))
Successfully Proved
A
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),Implies((d3array9(A,
 _x2, _x3, _x4, _k3)==d3array(A, _x2, _x3, _x4)),(d3array9(A, _x2, _x3, _x4, _k3
 + 1)==d3array(A, _x2, _x3, _x4)))))
Failed to Prove
ForAll([_n1],Implies(_n1>=0,d3array9(A, 0, _k2, _n1, 1) == C))
Successfully Proved
ForAll([_n1],Implies(_n1>=0,Implies((d3array9(A, _k3 - 1, _k2, _n1, _k3)==C),(d3
array9(A, _k3, _k2, _n1, _k3 + 1)==C))))
Successfully Proved
XXXXX-XXXXX
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),d3array18(A, _x2, _x
3, _x4, 0) == C))
Successfully Proved

ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),d3array14(A, _x2, _x
3, _x4, 0, _k6) == C))
Successfully Proved
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),d3array11(A, _x2, _x
3, _x4, 0, _k5, _k6) == C))
Successfully Proved
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),Implies((d3array11(A
, _x2, _x3, _x4, _k4 + 1, _k5, _k6)==C),(d3array11(A, _x2, _x3, _x4, _k4 + 2, _k
5, _k6)==C))))
Successfully Proved
A
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),Implies((d3array14(A
, _x2, _x3, _x4, _k5, _k6)==C),(d3array14(A, _x2, _x3, _x4, _k5 + 1, _k6)==C))))

Successfully Proved
A
ForAll([_x3,_x2,_x4],Implies(And(_x3>=0,And(_x2>=0,_x4>=0)),Implies((d3array18(A
, _x2, _x3, _x4, _k6)==C),(d3array18(A, _x2, _x3, _x4, _k6 + 1)==C))))
Successfully Proved
=====================Main Proving Process=====================

Axiomes Added

d3array2(A,(_n3+0),(_n2+0),(_n1+0),_N1(_n2,_n3),_n2,_n3) = C
d3array5(A,(_n3+0),(_n2+0),(_n1+0),_N2(_n3),_n3) = C
d3array9(A,(_n3+0),(_n2+0),(_n1+0),_N3) = C
d3array11(A,_x2,_x3,_x4,_N4(_n5,_n6),_n5,_n6) = C
d3array14(A,_x2,_x3,_x4,_N5(_n6),_n6) = C
d3array18(A,_x2,_x3,_x4,_N6) = C


Successfully Proved
==============================================================