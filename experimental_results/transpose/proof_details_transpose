Output in normal notation:
1. Frame axioms:
A1 = A
C1 = C
k1 = k
n1 = n

2. Output equations:
i1 = (_N4+0)
j1 = j10(_N4)
d2array1(_x1,_x2,_x3) = d2array10(_x1,_x2,_x3,_N4)
main = 0

3. Other axioms:
d2array2(_x1,_x2,_x3,(_n1+1),_n2) = ite(((_x1=C) and (_x2=(_n1+0)) and (_x3=(_n2
+0))),d2array2(A,(_n2+0),(_n1+0),_n1,_n2),d2array2(_x1,_x2,_x3,_n1,_n2))
d2array2(_x1,_x2,_x3,0,_n2) = d2array5(_x1,_x2,_x3,_n2)
(_N1(_n2)>=(-(0)+m))
(_n1<_N1(_n2)) -> ((_n1+0)<m)
j5((_n2+1)) = (_N1(_n2)+0)
d2array5(_x1,_x2,_x3,(_n2+1)) = d2array2(_x1,_x2,_x3,_N1(_n2),_n2)
j5(0) = 0
d2array5(_x1,_x2,_x3,0) = d2array(_x1,_x2,_x3)
(_N2>=(-(0)+n))
(_n2<_N2) -> ((_n2+0)<n)
d2array7(_x1,_x2,_x3,(_n3+1),_n4) = d2array7(_x1,_x2,_x3,_n3,_n4)
d2array7(_x1,_x2,_x3,0,_n4) = d2array10(_x1,_x2,_x3,_n4)
(_N3(_n4)>=(-(0)+n))
(_n3<_N3(_n4)) -> ((_n3+0)<n)
j10((_n4+1)) = (_N3(_n4)+0)
d2array10(_x1,_x2,_x3,(_n4+1)) = d2array7(_x1,_x2,_x3,_N3(_n4),_n4)
j10(0) = 0
d2array10(_x1,_x2,_x3,0) = d2array5(_x1,_x2,_x3,_N2)
(_N4>=(-(0)+m))
(_n4<_N4) -> ((_n4+0)<m)



After Instantiation of array variables

d2array2(C,(_n1+0),(_n2+0),(_n1+1),_n2) = d2array2(A,(_n2+0),(_n1+0),_n1,_n2)

d2array2(A,_x2,_x3,(_n1+1),_n2) = d2array2(A,_x2,_x3,_n1,_n2)

d2array2(C,_x2,_x3,0,_n2) = d2array5(C,_x2,_x3,_n2)

d2array2(A,_x2,_x3,0,_n2) = d2array5(A,_x2,_x3,_n2)

(_N1(_n2)>=(-(0)+m))
(_n1<_N1(_n2)) -> ((_n1+0)<m)
j5((_n2+1)) = (_N1(_n2)+0)

d2array5(C,_x2,_x3,(_n2+1)) = d2array2(C,_x2,_x3,_N1(_n2),_n2)

d2array5(A,_x2,_x3,(_n2+1)) = d2array2(A,_x2,_x3,_N1(_n2),_n2)

j5(0) = 0

d2array5(C,_x2,_x3,0) = d2array(C,_x2,_x3)

d2array5(A,_x2,_x3,0) = d2array(A,_x2,_x3)

(_N2>=(-(0)+n))
(_n2<_N2) -> ((_n2+0)<n)
d2array7(C,_x2,_x3,(_n3+1),_n4) = d2array7(C,_x2,_x3,_n3,_n4)

d2array7(A,_x2,_x3,(_n3+1),_n4) = d2array7(A,_x2,_x3,_n3,_n4)

d2array7(C,_x2,_x3,0,_n4) = d2array10(C,_x2,_x3,_n4)

d2array7(A,_x2,_x3,0,_n4) = d2array10(A,_x2,_x3,_n4)

(_N3(_n4)>=(-(0)+n))
(_n3<_N3(_n4)) -> ((_n3+0)<n)
j10((_n4+1)) = (_N3(_n4)+0)

d2array10(C,_x2,_x3,(_n4+1)) = d2array7(C,_x2,_x3,_N3(_n4),_n4)

d2array10(A,_x2,_x3,(_n4+1)) = d2array7(A,_x2,_x3,_N3(_n4),_n4)

j10(0) = 0

d2array10(C,_x2,_x3,0) = d2array5(C,_x2,_x3,_N2)

d2array10(A,_x2,_x3,0) = d2array5(A,_x2,_x3,_N2)

(_N4>=(-(0)+m))
(_n4<_N4) -> ((_n4+0)<m)









Collect all array variable Sa={A,C}


Generate set H which represent initial value(before the execution of program) of array elements.

H={A:d2array(A,_x2,_x3) , C:d2array(A,_x2,_x3)}

Construct L which represnt organized set of loop variable and corresponding loop constant.

L=[N2,[N1(n2)]]


For First Element of L

loop constant N2 and corresponding loop variable _n2

        for each element in Sa
        
                First Iteration A
                    
                        Recursive equation of _n2 
                        d2array5(A,_x2,_x3,(_n2+1)) = d2array2(A,_x2,_x3,_N1(_n2),_n2)
            
                        System tried to prove:
                        
                        
                            d2array5(A,_x2,_x3,0) = d2array(A,_x2,_x3)
        
                            Construct Z3 query
                            .
                            .
                            .
                            _s.add(Not(ForAll([_x2,_x3],Implies(And(x2>=0,_x3>=0),d2array5(A,_x2,_x3,0) = d2array(A,_x2,_x3)))))
                           
        
                            Result Successfully Proved 
                
                 Second Iteration C
                            

                            d2array5(C,_x2,_x3,0) = d2array(C,_x2,_x3)
        
                            Construct Z3 query
                            .
                            .
                            .
                            _s.add(Not(ForAll([_x2,_x3],Implies(And(x2>=0,_x3>=0),d2array5(A,_x2,_x3,0) = d2array(A,_x2,_x3)))))
                           
        
                            Result Successfully Proved 
                
                
                            Recursive Function Call 
                            -------------------------------------------------------------------------------------------------------
                
                
                            loop constant N1(_n2) and corresponding loop variable _n1

                            for each element in Sa
                
                                     Second Iteration A
                     
                                        Recursive equation of _n2 
                                        d2array2(A,_x2,_x3,(_n1+1),_n2)= d2array2(A,_x2,_x3,_n1,_n2)
                            

                                        d2array2(A,_x2,_x3,0,_n2) = d2array(A,_x2,_x3)
        
                                        Construct Z3 query
                                        .
                                        .
                                        .
                                        _s.add(Not(ForAll([_x2,_x3],Implies(And(x2>=0,_x3>=0),d2array2(A,_x2,_x3,0,_n2) = d2array(A,_x2,_x3)))))
                           
        
                                        Result Successfully Proved               
                
                                        
                                        Add Equation d2array2(A,_x2,_x3,_N1(_n2),_n2) = d2array(A,_x2,_x3)
        
                                    First Iteration C
                    
                                            Recursive equation of _n2 
                                            d2array2(C,(_n1+0),(_n2+0),(_n1+1),_n2) = d2array2(A,(_n2+0),(_n1+0),_n1,_n2)
            
                                            System tried to prove:
                        
                        
                                             d2array2(C,0,(_n2+0),0,_n2) = d2array(A,_x2,_x3)
        
                                            Construct Z3 query
                                            .
                                            .
                                            .
                                            _s.add(Not(ForAll([_x2,_x3],Implies(And(x2>=0,And(_x3>=0,_n2>=0)),d2array2(C,0,(_n2+0),0,_n2)  = d2array(A,_x2,_x3)))))
                           
        
                                            Query Failed 
                                            
                                            
                                            Reconstruct Base Case Query 
                
                                            d2array2(C,1,(_n2+0),1,_n2) = d2array2(A,(_n2+0),0,0,_n2)
                         
                                            Construct Z3 query
                                            .
                                            .
                                            .
                                            _s.add(Not(ForAll([_x2,_x3],Implies(And(x2>=0,And(_x3>=0,_n2>=0)),d2array2(C,1,(_n2+0),1,_n2) = d2array2(A,(_n2+0),0,0,_n2)))))
                        
                        
                                            Tried to prove Induction Step
                        
                                            Implies(ForAll([_n1,_n2],Implies(And(And(And(_n1>=0,_n2>=0),_n1<_L1),_L1>0),d2array2(C, _n1, _n2, _n1 + 1, _k2) == d2array2(A, _n2, _n1, _n1, _k2))),ForAll([_n1,_n2],Implies(And(And(And(And(And(_n1>=0,_n2>=0),_n1<_L1),_L1>0),_n1<_L1+1),_L1>0),d2array2(C, _n1, _n2, _n1 + 1, _n2) == d2array2(A, _k2, _n1, _n1, _n2))))
                        
                                            Construct Z3 query
                                                                    .
                                            .
                                            .
                                            _s.add(Not(Implies(ForAll([_n1,_n2],Implies(And(And(And(_n1>=0,_n2>=0),_n1<_L1),_L1>0),d2array2(C, _n1, _n2, _n1 + 1, _k2) == d2array2(A, _n2, _n1, _n1, _k2))),ForAll([_n1,_n2],Implies(And(And(And(And(And(_n1>=0,_n2>=0),_n1<_L1),_L1>0),_n1<_L1+1),_L1>0),d2array2(C, _n1, _n2, _n1 + 1, _n2) == d2array2(A, _k2, _n1, _n1, _n2))))))
                
                                            
                                            Add Equation
                        
                                            d2array2(C,(_n1+0),(_n2+0),_N1(_n2),_n2) = d2array2(A,(_n2+0),(_n1+0),_N1(_n2),_n2)
                                            
                                            
                                            Update H as follows 
                            
                                            H={A:d2array(A,_x2,_x3) , C:d2array2(A,(_n2+0),(_n1+0),_N1(_n2),_n2)}
                            
                            -------------------------------------------------------------------------------------------------------
                
                
        for each element in Sa
        
                First Iteration A
                    
                        Recursive equation of _n2 
                        d2array5(A,_x2,_x3,(_n2+1)) = d2array2(A,_x2,_x3,_N1(_n2),_n2)
            
                        System tried to prove:
                        
                        
                            d2array5(A,_x2,_x3,(_n2+1)) = d2array(A,_x2,_x3)
        
                            Construct Z3 query
                            .
                            .
                            .
                            _s.add(Not(ForAll([_x3,_x2],Implies(And(_x3>=0,_x2>=0),Implies((d2array10(A, _x2, _x3, _k4)==d2array(A, _x2, _x3)),(d2array10(A, _x2, _x3, _k4 + 1)==d2array(A, _x2, _x3)))))))))
                           
        
                            Result Successfully Proved 
                
                            System add 
                            
                            d2array5(A,_x2,_x3,_N2) = d2array(A,_x2,_x3)
                
                 Second Iteration C
                            

                            Recursive equation of _n2 
                            d2array5(A,_x2,_x3,(_n2+1)) = d2array2(A,_x2,_x3,_N1(_n2),_n2)
                
                            System tried to prove:
                        
                            d2array5(C,(_n2+0),(_n1+0),(_n2+1)) = d2array2(A,(_n2+0),(_n1+0),_N1(_n2),_n2)
        
                            Construct Z3 query
                            .
                            .
                            .
                            _s.add(Not(ForAll([_n1,_n2],Implies(And(_n1>=0,_n2>=0),Implies((d2array10(C, _n1, _n2, _k4)==d2array5(A, _n2, _n1, _N2)),(d2array10(C, _n1, _n2, _k4 + 1)==d2array5(A, _n2,_n1, _N2)))))))
                           
        
                            Result Successfully Proved 
                
                            System add 
                            
                            d2array5(C,(_n1+0),(_n2+0),_N2) = d2array5(A,(_n2+0),(_n1+0),_N2)

